{"version":3,"sources":["components/navbar.js","components/Form.js","components/alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","concat","mode","href","name","type","onChange","e","func","for","Form","_useState","useState","_useState2","Object","slicedToArray","text","setText","_useState3","_useState4","wordCounter","setWordCounter","_useState5","_useState6","charCounter","setCharCounter","heading","value","event","console","log","target","cCounter","wCounter","spaceCount","i","length","TextCounter","id","rows","onClick","upperText","toUpperCase","showAlert","lowerText","toLowerCase","navigator","clipboard","writeText","Alert","alert","role","msg","App","css","setCss","setAlert","message","setTimeout","lightMode","nav","textcolor","box","priv","darkMode","prop","setProp","document","title","components_Form","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.efbbfc82.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg bg-${props.mode['nav']}`}>\r\n        <div className=\"container-fluid text-dark\">\r\n          <a className={`navbar-brand text-${props.mode['textcolor']}`} href=\"#\">\r\n            <b>{props.name} </b>\r\n          </a>\r\n\r\n          <div className=\"form-check form-switch \">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              \r\n              onChange={(e)=>{\r\n                props.func()\r\n              }} \r\n               \r\n            />\r\n            <label className={`form-check-label text-${props.mode['textcolor']}`}for=\"flexSwitchCheckDefault\">\r\n              <b>DarkMode</b>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nconst Form = (props) => {\r\n  // Function base component\r\n\r\n  const [text, setText] = useState(\"\"); // Text Setter (useState)\r\n  const [wordCounter, setWordCounter] = useState(0); // Word Counter - setter (useState)\r\n  const [charCounter, setCharCounter] = useState(0); // Charaters Counter - setter (useState)\r\n\r\n  const handleUpperClick = () => {\r\n    // Function to convert text into Upper Case and update/set text using setText.\r\n    console.log(\"Uppercase was clicked\" + text);\r\n\r\n    let upperText = text.toUpperCase();\r\n    setText(upperText);\r\n    props.showAlert(\"converted to uppercase\",\"Successfully! \");\r\n  };\r\n\r\n  const handleLowerClick = () => {\r\n    // Function to convert text into Lower Case and update/set text using setText.\r\n    console.log(\"Lowercase was clicked\" + text);\r\n\r\n    let lowerText = text.toLowerCase();\r\n    setText(lowerText);\r\n    props.showAlert(\"converted to lowercase\",\"Successfully! \");\r\n\r\n  };\r\n\r\n  const handleCopyClick = () => {\r\n    // Function to copy text on clipboard from the DataBox\r\n    console.log(\"Copy was clicked\" + text);\r\n\r\n    navigator.clipboard.writeText(text);\r\n    props.showAlert(\"on clipboard\",\"Coppied! \");\r\n\r\n  };\r\n\r\n  const handleResetClick = () => {\r\n    // Function used to reset all the text inside DataBox\r\n    console.log(\"Reset was clicked\" + text);\r\n\r\n    setText(\"\");\r\n    setCharCounter(\"0\");\r\n    setWordCounter(\"0\");\r\n\r\n    props.showAlert(\"successfully!\",\"Reset \");\r\n\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    // Function which shows text and update on typing\r\n    console.log(\"on Change\");\r\n    setText(event.target.value);\r\n    TextCounter(event.target.value);\r\n  };\r\n\r\n  function TextCounter(text) {    \r\n    var cCounter = 0;\r\n    var wCounter = 0;\r\n    var spaceCount = 0\r\n    for (let i = 0; i < text.length; i++)\r\n    {\r\n      if (text[i] !== \" \") {\r\n        cCounter++;\r\n      }\r\n\r\n      if(spaceCount!==0){\r\n        if(text[i-1]===' ' && text[i]!==\" \" )\r\n        {\r\n          wCounter++;\r\n        }\r\n      }\r\n      else if(text[0]!==' '){\r\n        wCounter=1\r\n        spaceCount++\r\n      }\r\n      else if(text[0]===' '){\r\n        spaceCount++\r\n      }\r\n\r\n    }\r\n    setWordCounter(wCounter);\r\n    setCharCounter(cCounter);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <label for=\"exampleFormControlTextarea1\" className=\"form-label\">\r\n            Enter text below :\r\n          </label>\r\n\r\n          <textarea\r\n            className={`form-control bg-${props.mode['box']} text-${props.mode['textcolor']} fade show`} \r\n            value={text}\r\n            onChange={handleOnChange}\r\n            id=\"myBox\"\r\n            rows=\"3\"\r\n          ></textarea>\r\n        </div>\r\n\r\n        <button className=\"btn btn-primary\" onClick={handleUpperClick}>\r\n          Convert to Uppercase\r\n        </button>\r\n\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLowerClick}>\r\n          Convert to Lowercase\r\n        </button>\r\n\r\n        <button className=\"btn btn-success \" onClick={handleCopyClick}>\r\n          Copy\r\n        </button>\r\n\r\n        <button className=\"btn btn-danger mx-2\" onClick={handleResetClick}>\r\n          Reset\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"container my-3\">\r\n        <h2>Summary :</h2>\r\n       <li>\r\n          {wordCounter} Words\r\n        </li> \r\n\r\n        <li>\r\n          {charCounter} Characters\r\n        </li> \r\n      </div>\r\n\r\n      <div className=\"container my-3\" >\r\n        <p className={`h4 text-${props.mode['textcolor']}`}> Preview :</p>\r\n\r\n        <p className={`text-${props.mode['priv']}`}> {text}  </p> \r\n\r\n        <p className=\"text-info\">( <b>{wordCounter * 0.008}</b> minutes read... )</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n       props.alert && <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n        <strong>{props.alert.type}</strong>{props.alert.msg}\r\n\r\n</div>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\nimport Navbar from './components/navbar';\nimport Form from './components/Form';\nimport './App.css';\nimport Alert from './components/alert';\n\nfunction App() {\n\n  const [css,setCss]= useState('light');\n  const [alert,setAlert]=useState(null);\n\nconst showAlert = (message,type) =>{\n  setAlert({\n    msg:message,\n    type:type\n  })\n  setTimeout(() =>{\n    setAlert(null);\n  },1500);\n}\n\n  const lightMode = {nav:'warning',textcolor:'dark',box:'light',priv:'secondary'}\n  const darkMode = {nav:'dark',textcolor:'light',box:'secondary',priv:'light'}\n\n  const [prop,setProp] = useState(lightMode)\n \n   function mode()\n   {\n    if(css==='dark'){\n      setCss('light');\n      setProp(lightMode);\n      showAlert(\"Light mode has been enabled\" , \"Successfully! \")\n      document.title='C-BOX - Light Mode';\n    }\n    else{\n      setCss('dark');\n      setProp(darkMode);\n      showAlert(\"Dark mode has been enabled\" , \"Successfully! \")\n          document.title='C-BOX - Dark Mode';\n    }\n   }\n\n  return (\n   <>\n   \n   <div  className={css}>\n<div>\n\n<Navbar name=\"C - BOX\" mode={prop} func={mode}  />\n</div>\n    <Alert alert={alert}/>\n\n    <div className='container my-3'>\n    <Form heading=\"DataBox for conversions\" mode={prop} func={mode} showAlert={showAlert}/>\n\n    </div>\n    </div>\n  </>\n);\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}